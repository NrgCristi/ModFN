<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAVcAAACTCAMAAAAN4ao8AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAACNUExURf///yIfIAAAABsXGFRRUcnIyL++vQkABB8cHRcTFB4bHF5bXN/f325sbbCwsBwZGggA
        ABQQEfn5+fPz8w4ICuXl5dbV1ZSTk9zc3Dg1NklGR+vr609NTmRhYqimpzAtLnl4eLm4uHJwcIyKiiom
        J5ybnIF/gEA9Ps7NzaOhoY+Oj4aFhiciJRUMEDQxMhFD2ukAAAhmSURBVHhe7Zxpm6K6EoBZVAK2QiAu
        uOJud8/0//95N2BAKovwnDv3PmZOvV/mnACtvFYqSRF1EARBEARBEARBEARBEARBEARBEARBEARBEARB
        EARBEARBEARBEARBEARB3pc0S8V/IX+GbHlYFNvxZrA9nnb3tWhFXpKmWbaefczF/6rMTxs3pGHox37I
        /43z7W4mDqlk6b8+qA/XazHZjgeb1S3fn5O7aJYYjX0aE7dFFNJ9YfgYhrfNYLw9FtfT4rKbHob35Wyd
        iWN/F6nptuYBj0EehX4cRxEh3ki0A+ZjGgKpDyIaF9qYnXqxz6M6pIIwOuerweT778geabb+mA8Pu8V1
        Ml7lF9EqMaFC0gOt10UUisMyhJ534qQ200AcryEk4umDMroffA0tj9zFLT8TxgLG46VMito+e/fEnQs0
        XrNtoonVmsg7qqlU8dpAfMry01KcZyUbyvu1uB1OuBXtgIEvDgtUr7MVE8cMsJXSuc1eSyJGJ+bx8e2R
        lQVTcaDFVApX1es8N+WAhjCX4++11zJ9WGxW9hqdlTEmO0fiYI3sdfbTqdV1ffkvd3nlULoQJ9uG7NVl
        hTjSsFDu3xuKQw+yTQ+tPGJvcCzq4dUlwdjOyYHilVBpcrqmyoAkeS06cmsNnYgLHhx6eOUX5VbmAsWr
        Gw7g0H1VrUGvfeLuQfIpLqkY9bvOPxtWIW+N6tX1wGRzKQ9aHOB1pqRfIyRqj109vXKxFkasxmv0005p
        W03uBF6PcM1QEfl8aaaZz4JpXF+vrn8z1xjeFY1Xl32Lgxx5SVDR9qraITT82YzHq71mWcsO4jJOb68u
        HVtXoNF5JfTZ8Vaa422v6UY+gbrFaJamabacbn35oL96GoJe+aKPQ6k2zhPrpls6r63uetCFa9urfAJh
        rbl8OtrIg17wDFjgleS7y+Lr67vYrn4x5T0R37YUq/XqevXd68ekp9dUup4EF9Bl1/IcLByLI5JXv2nP
        5p8DKr8rql1fvzF6r7GYwl8S0QB5eh1K4QrnEpxUnqY9KzsGr5zsoMS5qeT7rui9ioSW+Zpcx3l6LeBk
        IDmJ9ifpFp7CmlPMXvkrf0sfmLSmeHsMXolfTm00S4KKxmvmAvH+SrS3me1BLnmOXK+88q4CxRJq11zL
        4NWlR8f5YPpwfXodwZv3tJ11Bz+dsF4bvPbqnGAOCsBa7e0xeS3dTUzllMbrFfTx1pgEuMXihIqkTsEd
        Xh04g9Oc8M4YvfqbkSELPL2m0FijWwIWEELeEyq6vMIVNKFWFbaMXt34bMgCT4FrIIz8erQqZO0nEm68
        EQm2y6vUX0yf2nti9gqHJEB9i3CRS5XKbc24/SJkLwKv0yucxDGrEiz0aq5P78W/FbXXKRhaEs0jnAcX
        kFHCj0drp9f0d/ujpVfRbAXA695UoaZF0VZee4W+9LOBkiHIF/UUv9MrfHPxzabiS/utE3c50EYscWdH
        ndcT9GqcYS7heeLqbq9guhHtrfVKZnMQWTXBBY4htZlvMM3yjFspZtCreOrY7XXRvs5mrx/Ot0Zs2QP7
        eDXedwbPE0Wdbq8gz9jtNcvBlLQi4Bq1XqU8YI7X3+KUiv7x+vX3eNVUXKsandYr6Kf/g/wKqjqWe5X3
        uIkSjNbrDiSNvvMBJiqF3V437b7jb0SrFahel2B1xDVUJUOtV1h2CXSbBitA5eXxOXE6vaag7vN4H7ag
        enUuILrivOp+Wq8fwGtoLJGCi6Nc5OFOr3C91dRrrEDjNQPPCpPHKKP1moISAvENCRCe5g9Ec6dXMGd2
        PasecWm8Ou1CVv0IUetV2lygbt98ANNrsx7t8joD4WrXsKX12tpq0ZTp9V7hQlY79nAk+3UZocsreMkX
        VZ23ROv1uTUoqTfG671KuzaadsAdyCeReJEur9KuW1NneFO0Xp1PcctxLhoMXtMcPLuKb6Id0H4JLrBO
        rx1epUc80Y9x1fGW6L2mYuh6BqDeq7SSdQNNLQ8uHlzWfDXkpded9HWFwLIdL3qvzrCS0doNYfCqfKND
        KT5P4cNHEjdbCl94XcrfAiGxcTH3nhi8VkMXCZ6PlAxele1ZnhRXO2nvW2tHocnrejQJ269WEnyJg7Zg
        8jpzCQg+g1dnJwWsm2xbe1xnhfyonD0vBV6j2/AwnU4/F8VgHyj7EGOwddQGTF75qguMQiavGdx1wQnd
        4l6NMdn8tJdqDW7YjFqSVzcKgiAJGA11e2ya/WLWYPSa3kAdxeRVs4WL0N+38fG4vflM2TXHWrMl6PUV
        uuHwzTF6dUZgIm70mv0o8njw+WHoa9rBLqveXunArjlWidmrA9aNRq/qt+bMRPCD6+k1tHAb/CuvALAW
        BV6dsZxEjcBdnD2/R0Nt1PonvH780vR4HazeQfSgn9dgY9tUoOIPeHUOnmYIV6Gt7xaU9PEaeYVVZayG
        P+FV3quqJ5TnoD28ssi6CZbgn3mVa0uLbrFhvS2rodMr9a72TQQE7XVoa+2u8Nqr8+l15Fim7gJ67ZUw
        b2LjgCXYep6XJOUyJyKk2Uqt0uHVGdH2CTLE0zz7euGVUC/8snK8algv76Pp5/dxkLvs9z/NA5z12Byy
        lOm2Gmq9ksinSeIWUga3muxFhIxpVP4S0eMZuL52fzgHOrMk9CbaPzxN+J+Lyp/KCSljLEmCgFF/P/g+
        mLvNX8clL384yyXl7wUFeq9OussD6ccKSMzo1vAg9cAD/PxzWw22x+tp8Tk9jO7zD2sHqv+GtPqxt/tw
        ZJxTDidnxsK4DOyyRwfhbWHOLbM1/ophb9L75bgqg5bk439Vj/5/MCvBWEQQBEEQBEEQBEEQBEEQBEEQ
        BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQxFIc5z9mW3wKOWKrLQAAAABJRU5ErkJggg==
</value>
  </data>
</root>